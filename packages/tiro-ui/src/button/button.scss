@import '../../style/base.scss';

$prefix-button: 'ti-button';

$button-size-small: 11px;
$button-size-medium: 14px;
$button-size-large: 17px;

$button-size-small-h: 32px;
$button-size-medium-h: 35px;
$button-size-large-h: 38px;

$button-size-small-font: 12px;
$button-size-medium-font: 14px;
$button-size-large-font: 16px;

@mixin border($color, $light) {
  &:after {
    border-width: 2px;
    border-color: $color;
    background-color: $light;
  }
}

@mixin type($color, $light, $dark) {
  &:not(.is-fill):not(.is-text) {
    &:after {
      content: '';
      border: 1px solid $--ti-color-gray-200;
      position: absolute;
      border-radius: 3px;
      inset: 0;
    }
    &:hover:not(.is-disabled):not(.is-dashed) {
      @include border($color, $light);
      color: $dark;
    }
    &:active:not(.is-disabled):not(.is-dashed) {
      border-color: $dark !important;
    }
    &:focus:not(.is-disabled):not(.is-dashed) {
      color: $dark;
      @include border($color, $light);
    }
    &.is-dashed {
      &:after {
        content: '';
        border-style: dashed;
        border-width: 1px;
        border-color: $color;
        position: absolute;
        border-radius: 3px;
        inset: 0;
      }
      color: $color;
      &:hover {
        &:after {
          border-width: 2px;
        }
      }
      &:focus {
        &:after {
          border-width: 2px;
        }
      }
    }
  }
  &.is-fill {
    background-color: $color;
    color: $--ti-color-white;
  }
  &.is-plain:not(.is-fill) {
    &:after {
      border-color: $light !important;
    }
    background-color: $light;
  }
  &.is-text:not(.is-fill):not(.is-plain) {
    color: $color;
    &:hover:not(.is-disabled),
    &:focus:not(.is-disabled) {
      background-color: $--ti-color-gray-100;
    }
  }
}

@mixin size($padding, $height, $font) {
  padding: 0 $padding;
  height: $height;
  font-size: $font;
  &.is-circle {
    padding: 0;
    width: $height;
    text-align: center;
    line-height: $height;
    border-radius: 50%;
    &:after {
      border-radius: 50% !important;
    }
  }
  &.is-round:not(.is-circle)  {
    border-radius: 20px;
    &:after {
      border-radius: 20px !important;
    }
  }
}

.#{$prefix-button} {
  cursor: pointer;
  border: none;
  outline: none;
  user-select: none;
  box-sizing: border-box;
  border-radius: 3px;
  background-color: $--ti-color-transparent;
  border-color: $--ti-color-transparent;
  position: relative;

  &:active:not(.is-disabled) {
    transform: scale(0.98);
  }

  &.is-disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  // type
  &.is-default {
    @include type(
      $--ti-color-primary,
      $--ti-color-primary-light-1,
      $--ti-color-primary-dark-1
    );
  }

  &.is-success {
    @include type(
      $--ti-color-success,
      $--ti-color-success-light-1,
      $--ti-color-success-dark-1
    );
  }

  &.is-info {
    @include type(
      $--ti-color-info,
      $--ti-color-info-light-1,
      $--ti-color-info-dark-1
    );
  }

  &.is-danger {
    @include type(
      $--ti-color-danger,
      $--ti-color-danger-light-1,
      $--ti-color-danger-dark-1
    );
  }

  &.is-warning {
    @include type(
      $--ti-color-warning,
      $--ti-color-warning-light-1,
      $--ti-color-warning-dark-1
    );
  }

  &.is-bright {
    @include type(
      $--ti-color-bright,
      $--ti-color-bright-light-1,
      $--ti-color-bright-dark-1
    );
  }

  // size
  &.is-small {
    @include size(
      $button-size-small,
      $button-size-small-h,
      $button-size-small-font
    );
  }

  &.is-medium {
    @include size(
      $button-size-medium,
      $button-size-medium-h,
      $button-size-medium-font
    );
  }

  &.is-large {
    @include size(
      $button-size-large,
      $button-size-large-h,
      $button-size-large-font
    );
  }
}
